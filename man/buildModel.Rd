% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/OOP_util.R
\name{buildModel}
\alias{buildModel}
\title{Builds a model of the specified type}
\usage{
buildModel(type, data, fx, args = NULL)
}
\arguments{
\item{type}{the type of model to build}

\item{data}{a data frame specifying data}

\item{fx}{a model formula object}

\item{args}{(optional) other arguments to pass to the model.}
}
\value{
a model object of the type requested, with the class set to match the constants used in this package
}
\description{
This method builds a model of the requested type. It is passed data, a formula object, and whatever arguments that model type would
ordinarily use (see details).
}
\details{
Model building is such a primary part of this package, but each modelling package does not use the same set of calls or parameters to
build models. This function is a wrapper that builds models of using a standard interface. It converts from the normal suite of
parameters: a data frame, a formula object accessing variables within the data frame, and various arguments specifying the particulars
required by that model package. See \code{\link{generateModels}} for more information on arguments that can/should be passed.

It also wraps results from packages that do not return an S3 class in a class object by attaching a class attribute. For for modelling
packages that return objects, this package uses the same class names for interoperability, however, in some cases it attaches data that
are not included by that class, but are required by NPEL.Classification.
}
\seealso{
generateModels
}

